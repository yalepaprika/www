(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["contributors_$slug~folds_$slug~index"],{

/***/ "./components/ArticleList.html":
/*!*************************************!*\
  !*** ./components/ArticleList.html ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/ArticleList.html generated by Svelte v2.9.9 */


const file = "components/ArticleList.html";

function create_main_fragment(component, ctx) {
	var ul;

	var each_value = ctx.articles;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(component, get_each_context(ctx, each_value, i));
	}

	return {
		c: function create() {
			ul = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("ul");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h()
		},

		l: function claim(nodes) {
			ul = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "UL", {}, false);
			var ul_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(ul, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(ul, target, anchor);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},

		p: function update(changed, ctx) {
			if (changed.articles) {
				each_value = ctx.articles;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(component, child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(ul);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["destroyEach"])(each_blocks, detach);
		}
	};
}

// (2:2) {#each articles as article}
function create_each_block(component, ctx) {
	var if_block_anchor;

	var if_block = (ctx.article.title) && create_if_block(component, ctx);

	return {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(if_block_anchor, target, anchor);
		},

		p: function update(changed, ctx) {
			if (ctx.article.title) {
				if (if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block = create_if_block(component, ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		d: function destroy(detach) {
			if (if_block) if_block.d(detach);
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(if_block_anchor);
			}
		}
	};
}

// (6:8) {#each article.meta.contributors as contributor}
function create_each_block_1(component, ctx) {
	var span, raw_value = ctx.contributor.title.rendered, raw_after, text, text_1_value = ' ', text_1;

	return {
		c: function create() {
			span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("span");
			raw_after = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])('noscript');
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(",");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_1_value);
			this.h()
		},

		l: function claim(nodes) {
			span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "SPAN", {}, false);
			var span_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(span);

			raw_after = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])('noscript');
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(span_nodes, ",");
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(span_nodes, text_1_value);
			span_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(span, file, 6, 10, 223);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(span, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(raw_after, span);
			raw_after.insertAdjacentHTML("beforebegin", raw_value);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, span);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, span);
		},

		p: function update(changed, ctx) {
			if ((changed.articles) && raw_value !== (raw_value = ctx.contributor.title.rendered)) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachBefore"])(raw_after);
				raw_after.insertAdjacentHTML("beforebegin", raw_value);
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(span);
			}
		}
	};
}

// (5:6) {#if article.meta.contributors}
function create_if_block_1(component, ctx) {
	var each_anchor;

	var each_value_1 = ctx.article.meta.contributors;

	var each_blocks = [];

	for (var i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(component, get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c: function create() {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		l: function claim(nodes) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_anchor = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createComment"])();
		},

		m: function mount(target, anchor) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(each_anchor, target, anchor);
		},

		p: function update(changed, ctx) {
			if (changed.articles) {
				each_value_1 = ctx.article.meta.contributors;

				for (var i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block_1(component, child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_anchor.parentNode, each_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value_1.length;
			}
		},

		d: function destroy(detach) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["destroyEach"])(each_blocks, detach);

			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(each_anchor);
			}
		}
	};
}

// (3:4) {#if article.title}
function create_if_block(component, ctx) {
	var li, a, text, span, raw_value = ctx.article.title.rendered, a_href_value;

	var if_block = (ctx.article.meta.contributors) && create_if_block_1(component, ctx);

	return {
		c: function create() {
			li = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("li");
			a = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("a");
			if (if_block) if_block.c();
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n      ");
			span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("span");
			this.h()
		},

		l: function claim(nodes) {
			li = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "LI", {}, false);
			var li_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(li);

			a = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(li_nodes, "A", { rel: true, href: true }, false);
			var a_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(a);

			if (if_block) if_block.l(a_nodes);
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(a_nodes, "\n      ");

			span = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(a_nodes, "SPAN", { class: true }, false);
			var span_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(span);

			span_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			a_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			li_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			span.className = "fsi";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(span, file, 9, 6, 311);
			a.rel = "prefetch";
			a.href = a_href_value = "/articles/" + ctx.article.slug;
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(a, file, 3, 8, 67);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(li, file, 3, 4, 63);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(li, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(a, li);
			if (if_block) if_block.m(a, null);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, a);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(span, a);
			span.innerHTML = raw_value;
		},

		p: function update(changed, ctx) {
			if (ctx.article.meta.contributors) {
				if (if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block = create_if_block_1(component, ctx);
					if_block.c();
					if_block.m(a, text);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if ((changed.articles) && raw_value !== (raw_value = ctx.article.title.rendered)) {
				span.innerHTML = raw_value;
			}

			if ((changed.articles) && a_href_value !== (a_href_value = "/articles/" + ctx.article.slug)) {
				a.href = a_href_value;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(li);
			}

			if (if_block) if_block.d();
		}
	};
}

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.article = list[i];
	child_ctx.each_value = list;
	child_ctx.article_index = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.contributor = list[i];
	child_ctx.each_value_1 = list;
	child_ctx.contributor_index = i;
	return child_ctx;
}

function ArticleList(options) {
	this._debugName = '<ArticleList>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('articles' in this._state)) console.warn("<ArticleList> was created without expected data property 'articles'");
	this._intro = true;

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(ArticleList.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

ArticleList.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		ArticleList = register("components/ArticleList.html", ArticleList);
	} else {
		// hot update
		ArticleList = reload("components/ArticleList.html", ArticleList);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (ArticleList);


/***/ }),

/***/ "./components/Title.html":
/*!*******************************!*\
  !*** ./components/Title.html ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/Title.html generated by Svelte v2.9.9 */


const file = "components/Title.html";

function add_css() {
	var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
	style.id = 'svelte-quv5ds-style';
	style.textContent = "h1.svelte-quv5ds{font-size:3rem;line-height:0.9;font-weight:400;margin-bottom:3rem}@media(min-width: 768px){h1.svelte-quv5ds{font-size:4rem}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGl0bGUuaHRtbCIsInNvdXJjZXMiOlsiVGl0bGUuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyI8ZGl2IGNsYXNzPVwiYzEyIHoyXCI+XG4gIDxoMSBjbGFzcz1cImNvMiBjOCBzbS1jbzQgc20tYzRcIj57QGh0bWwgdGl0bGV9PC9oMT5cbjwvZGl2PlxuXG48c3R5bGU+XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgbGluZS1oZWlnaHQ6IDAuOTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgIH1cbiAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsRUFBRSxjQUFDLENBQUMsQUFDRixTQUFTLENBQUUsSUFBSSxDQUNmLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLGFBQWEsQ0FBRSxJQUFJLEFBQ3JCLENBQUMsQUFDRCxNQUFNLEFBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBQ3pCLEVBQUUsY0FBQyxDQUFDLEFBQ0YsU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUNILENBQUMifQ== */";
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
	var div, h1;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h1");
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "H1", { class: true }, false);
			var h1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h1);

			h1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			h1.className = "co2 c8 sm-co4 sm-c4 svelte-quv5ds";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(h1, file, 1, 2, 23);
			div.className = "c12 z2";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(h1, div);
			h1.innerHTML = ctx.title;
		},

		p: function update(changed, ctx) {
			if (changed.title) {
				h1.innerHTML = ctx.title;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}
		}
	};
}

function Title(options) {
	this._debugName = '<Title>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('title' in this._state)) console.warn("<Title> was created without expected data property 'title'");
	this._intro = true;

	if (!document.getElementById("svelte-quv5ds-style")) add_css();

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Title.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Title.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		Title = register("components/Title.html", Title);
	} else {
		// hot update
		Title = reload("components/Title.html", Title);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Title);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0FydGljbGVMaXN0Lmh0bWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9UaXRsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NCQUNTLFFBQVE7Ozs7Z0NBQWI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUJBQUssUUFBUTs7bUNBQWI7Ozs7Ozs7Ozs7Ozs7OztvQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FCQUNLLE9BQU8sQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBQWIsT0FBTyxDQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBSUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLGtDQUFHLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzREQUFoQyxXQUFXLENBQUMsS0FBSyxDQUFDLFFBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFEbEMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZOzs7O2tDQUE5Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1QkFBSyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVk7O3FDQUE5Qjs7Ozs7Ozs7Ozs7Ozs7O3NDQUFBOzs7Ozs7Ozs7Ozs7Ozs7O3dDQUlxQixPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVE7O3FCQUwxQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhDQURPLE9BQU8sQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7V0FDNUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZOzs7Ozs7Ozs7Ozs7OzREQUtMLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUTs7OztpRkFOVixPQUFPLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0JDRmQsS0FBSzs7Ozs7dUJBQUwsS0FBSyIsImZpbGUiOiI4MWJkYzM1NDA0MGYyNDk0MWIzZC9jb250cmlidXRvcnNfJHNsdWd+Zm9sZHNfJHNsdWd+aW5kZXguY29udHJpYnV0b3JzXyRzbHVnfmZvbGRzXyRzbHVnfmluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHVsPlxuICB7I2VhY2ggYXJ0aWNsZXMgYXMgYXJ0aWNsZX1cbiAgICB7I2lmIGFydGljbGUudGl0bGV9XG4gICAgPGxpPjxhIHJlbD1cInByZWZldGNoXCIgaHJlZj1cIi9hcnRpY2xlcy97YXJ0aWNsZS5zbHVnfVwiPlxuICAgICAgeyNpZiBhcnRpY2xlLm1ldGEuY29udHJpYnV0b3JzfVxuICAgICAgICB7I2VhY2ggYXJ0aWNsZS5tZXRhLmNvbnRyaWJ1dG9ycyBhcyBjb250cmlidXRvcn1cbiAgICAgICAgICA8c3Bhbj57QGh0bWwgY29udHJpYnV0b3IudGl0bGUucmVuZGVyZWR9LHsnICd9PC9zcGFuPlxuICAgICAgICB7L2VhY2h9XG4gICAgICB7L2lmfVxuICAgICAgPHNwYW4gY2xhc3M9XCJmc2lcIj57QGh0bWwgYXJ0aWNsZS50aXRsZS5yZW5kZXJlZH08L3NwYW4+PC9hPjwvbGk+XG4gICAgey9pZn1cbiAgey9lYWNofVxuPC91bD4iLCI8ZGl2IGNsYXNzPVwiYzEyIHoyXCI+XG4gIDxoMSBjbGFzcz1cImNvMiBjOCBzbS1jbzQgc20tYzRcIj57QGh0bWwgdGl0bGV9PC9oMT5cbjwvZGl2PlxuXG48c3R5bGU+XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgbGluZS1oZWlnaHQ6IDAuOTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgIH1cbiAgfVxuPC9zdHlsZT4iXSwic291cmNlUm9vdCI6IiJ9