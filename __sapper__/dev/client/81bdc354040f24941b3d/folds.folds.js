(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["folds"],{

/***/ "./components/FoldGrid.html":
/*!**********************************!*\
  !*** ./components/FoldGrid.html ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* harmony import */ var _FullSpread_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FullSpread.html */ "./components/FullSpread.html");
/* harmony import */ var _HalfSpread_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HalfSpread.html */ "./components/HalfSpread.html");
/* harmony import */ var _QuarterSpread_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QuarterSpread.html */ "./components/QuarterSpread.html");
/* components/FoldGrid.html generated by Svelte v2.9.9 */





const SPREADS = {
  full: _FullSpread_html__WEBPACK_IMPORTED_MODULE_1__["default"],
  half: _HalfSpread_html__WEBPACK_IMPORTED_MODULE_2__["default"],
  quarter: _QuarterSpread_html__WEBPACK_IMPORTED_MODULE_3__["default"]
}

function data() {
  return {
    margin: .15
  }
};

function getSpread(slug) {
	return SPREADS[slug];
}

const file = "components/FoldGrid.html";

function create_main_fragment(component, ctx) {
	var div;

	var each_value = ctx.layout.items;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(component, get_each_context(ctx, each_value, i));
	}

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true, style: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			div.className = "psa l0";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "width", "100vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "height", "" + ctx.layout.height + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},

		p: function update(changed, ctx) {
			if (changed.layout || changed.margin) {
				each_value = ctx.layout.items;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(component, child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}

			if (changed.layout) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "height", "" + ctx.layout.height + "vw");
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["destroyEach"])(each_blocks, detach);
		}
	};
}

// (2:3) {#each layout.items as item, i}
function create_each_block(component, ctx) {
	var div, div_1, a, a_href_value, text_1, div_2, a_1, a_1_href_value;

	var switch_value = getSpread(ctx.item.spread);

	function switch_props(ctx) {
		var switch_instance_initial_data = { media: ctx.item.fold.meta.fold_front };
		return {
			root: component.root,
			store: component.store,
			data: switch_instance_initial_data
		};
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props(ctx));
	}

	function select_block_type(ctx) {
		if (!ctx.item.fold.meta.bulletin) return create_if_block;
		return create_if_block_1;
	}

	var current_block_type = select_block_type(ctx);
	var if_block = current_block_type(component, ctx);

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			a = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("a");
			if (switch_instance) switch_instance._fragment.c();
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n      ");
			div_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			a_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("a");
			if_block.c();
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true, style: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			div_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "DIV", { class: true }, false);
			var div_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_1);

			a = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_1_nodes, "A", { rel: true, href: true }, false);
			var a_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(a);

			if (switch_instance) switch_instance._fragment.l(a_nodes);
			a_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(div_nodes, "\n      ");

			div_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "DIV", { class: true }, false);
			var div_2_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div_2);

			a_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_2_nodes, "A", { rel: true, href: true }, false);
			var a_1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(a_1);

			if_block.l(a_1_nodes);
			a_1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_2_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			a.rel = "prefetch";
			a.href = a_href_value = "/folds/" + ctx.item.fold.slug;
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(a, file, 4, 8, 354);
			div_1.className = "mb0-5 w100 h100";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div_1, file, 3, 6, 316);
			a_1.rel = "prefetch";
			a_1.href = a_1_href_value = "/folds/" + ctx.item.fold.slug;
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(a_1, file, 7, 8, 541);
			div_2.className = "dn sm-db";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div_2, file, 6, 6, 510);
			div.className = "psa";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "left", "" + ctx.layout.slots[ctx.i * 2] + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "top", "" + ctx.layout.slots[ctx.i * 2 + 1] + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "width", "" + ctx.item._width + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "height", "" + ctx.item._height + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "padding", "" + ctx.margin * ctx.item._height + "vw " + ctx.margin * ctx.item._width + "vw");
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 2, 4, 108);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_1, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(a, div_1);

			if (switch_instance) {
				switch_instance._mount(a, null);
			}

			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(div_2, div);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(a_1, div_2);
			if_block.m(a_1, null);
		},

		p: function update(changed, ctx) {
			var switch_instance_changes = {};
			if (changed.layout) switch_instance_changes.media = ctx.item.fold.meta.fold_front;

			if (switch_value !== (switch_value = getSpread(ctx.item.spread))) {
				if (switch_instance) {
					switch_instance.destroy();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props(ctx));
					switch_instance._fragment.c();
					switch_instance._mount(a, null);
				} else {
					switch_instance = null;
				}
			}

			else if (switch_value) {
				switch_instance._set(switch_instance_changes);
			}

			if ((changed.layout) && a_href_value !== (a_href_value = "/folds/" + ctx.item.fold.slug)) {
				a.href = a_href_value;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(changed, ctx);
			} else {
				if_block.d(1);
				if_block = current_block_type(component, ctx);
				if_block.c();
				if_block.m(a_1, null);
			}

			if ((changed.layout) && a_1_href_value !== (a_1_href_value = "/folds/" + ctx.item.fold.slug)) {
				a_1.href = a_1_href_value;
			}

			if (changed.layout) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "left", "" + ctx.layout.slots[ctx.i * 2] + "vw");
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "top", "" + ctx.layout.slots[ctx.i * 2 + 1] + "vw");
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "width", "" + ctx.item._width + "vw");
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "height", "" + ctx.item._height + "vw");
			}

			if (changed.margin || changed.layout) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["setStyle"])(div, "padding", "" + ctx.margin * ctx.item._height + "vw " + ctx.margin * ctx.item._width + "vw");
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}

			if (switch_instance) switch_instance.destroy();
			if_block.d();
		}
	};
}

// (9:10) {#if !item.fold.meta.bulletin}
function create_if_block(component, ctx) {
	var h2, text_value = ctx.item.fold.meta.volume, text, text_1, text_2_value = ctx.item.fold.meta.number, text_2, text_3, raw_value = ctx.item.fold.title.rendered, raw_before;

	return {
		c: function create() {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h2");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("-");
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_2_value);
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(" ");
			raw_before = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])('noscript');
			this.h()
		},

		l: function claim(nodes) {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "H2", {}, false);
			var h2_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h2);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, "-");
			text_2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, text_2_value);
			text_3 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, " ");
			raw_before = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])('noscript');
			h2_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(h2, file, 9, 12, 644);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(h2, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_2, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_3, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(raw_before, h2);
			raw_before.insertAdjacentHTML("afterend", raw_value);
		},

		p: function update(changed, ctx) {
			if ((changed.layout) && text_value !== (text_value = ctx.item.fold.meta.volume)) {
				text.data = text_value;
			}

			if ((changed.layout) && text_2_value !== (text_2_value = ctx.item.fold.meta.number)) {
				text_2.data = text_2_value;
			}

			if ((changed.layout) && raw_value !== (raw_value = ctx.item.fold.title.rendered)) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachAfter"])(raw_before);
				raw_before.insertAdjacentHTML("afterend", raw_value);
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(h2);
			}
		}
	};
}

// (11:10) {:else}
function create_if_block_1(component, ctx) {
	var h2, text_value = ctx.item.fold.meta.volume, text, text_1;

	return {
		c: function create() {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h2");
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])(text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("-Bulletin");
			this.h()
		},

		l: function claim(nodes) {
			h2 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "H2", {}, false);
			var h2_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h2);

			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, text_value);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(h2_nodes, "-Bulletin");
			h2_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(h2, file, 11, 12, 764);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(h2, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text, h2);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(text_1, h2);
		},

		p: function update(changed, ctx) {
			if ((changed.layout) && text_value !== (text_value = ctx.item.fold.meta.volume)) {
				text.data = text_value;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(h2);
			}
		}
	};
}

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.item = list[i];
	child_ctx.each_value = list;
	child_ctx.i = i;
	return child_ctx;
}

function FoldGrid(options) {
	this._debugName = '<FoldGrid>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(data(), options.data);
	if (!('layout' in this._state)) console.warn("<FoldGrid> was created without expected data property 'layout'");
	if (!('margin' in this._state)) console.warn("<FoldGrid> was created without expected data property 'margin'");
	this._intro = true;

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);

		this._lock = true;
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._beforecreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
		this._lock = false;
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(FoldGrid.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

FoldGrid.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		FoldGrid = register("components/FoldGrid.html", FoldGrid);
	} else {
		// hot update
		FoldGrid = reload("components/FoldGrid.html", FoldGrid);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (FoldGrid);


/***/ }),

/***/ "./components/FullSpread.html":
/*!************************************!*\
  !*** ./components/FullSpread.html ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/FullSpread.html generated by Svelte v2.9.9 */


const file = "components/FullSpread.html";

function add_css() {
	var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
	style.id = 'svelte-1cuuebb-style';
	style.textContent = "img.svelte-1cuuebb{width:100%;height:100%}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRnVsbFNwcmVhZC5odG1sIiwic291cmNlcyI6WyJGdWxsU3ByZWFkLmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiPGRpdiBjbGFzcz1cImgxMDAgdzEwMCBvaCBiZ2Mtd2hpdGVcIj5cbiAgPGltZyBzcmM9XCJ7bWVkaWEubWVkaWFfZGV0YWlscy5zaXplcy5mdWxsLnNvdXJjZV91cmx9XCI+XG48L2Rpdj5cblxuPHN0eWxlPlxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsR0FBRyxlQUFDLENBQUMsQUFDSCxLQUFLLENBQUUsSUFBSSxDQUNYLE1BQU0sQ0FBRSxJQUFJLEFBQ2QsQ0FBQyJ9 */";
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
	var div, img, img_src_value;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("img");
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(img);

			img_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			img.src = img_src_value = ctx.media.media_details.sizes.full.source_url;
			img.className = "svelte-1cuuebb";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(img, file, 1, 2, 39);
			div.className = "h100 w100 oh bgc-white";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(img, div);
		},

		p: function update(changed, ctx) {
			if ((changed.media) && img_src_value !== (img_src_value = ctx.media.media_details.sizes.full.source_url)) {
				img.src = img_src_value;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}
		}
	};
}

function FullSpread(options) {
	this._debugName = '<FullSpread>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('media' in this._state)) console.warn("<FullSpread> was created without expected data property 'media'");
	this._intro = true;

	if (!document.getElementById("svelte-1cuuebb-style")) add_css();

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(FullSpread.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

FullSpread.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		FullSpread = register("components/FullSpread.html", FullSpread);
	} else {
		// hot update
		FullSpread = reload("components/FullSpread.html", FullSpread);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (FullSpread);


/***/ }),

/***/ "./components/HalfSpread.html":
/*!************************************!*\
  !*** ./components/HalfSpread.html ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/HalfSpread.html generated by Svelte v2.9.9 */


const file = "components/HalfSpread.html";

function add_css() {
	var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
	style.id = 'svelte-1qwip6t-style';
	style.textContent = "img.svelte-1qwip6t{width:200%;height:100%;transform:translate(-50%)}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGFsZlNwcmVhZC5odG1sIiwic291cmNlcyI6WyJIYWxmU3ByZWFkLmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiPGRpdiBjbGFzcz1cImgxMDAgdzEwMCBvaCBiZ2Mtd2hpdGVcIj5cbiAgPGltZyBzcmM9XCJ7bWVkaWEubWVkaWFfZGV0YWlscy5zaXplcy5mdWxsLnNvdXJjZV91cmx9XCI+XG48L2Rpdj5cblxuPHN0eWxlPlxuICBpbWcge1xuICAgIHdpZHRoOiAyMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcbiAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsR0FBRyxlQUFDLENBQUMsQUFDSCxLQUFLLENBQUUsSUFBSSxDQUNYLE1BQU0sQ0FBRSxJQUFJLENBQ1osU0FBUyxDQUFFLFVBQVUsSUFBSSxDQUFDLEFBQzVCLENBQUMifQ== */";
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
	var div, img, img_src_value;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("img");
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(img);

			img_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			img.src = img_src_value = ctx.media.media_details.sizes.full.source_url;
			img.className = "svelte-1qwip6t";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(img, file, 1, 2, 39);
			div.className = "h100 w100 oh bgc-white";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(img, div);
		},

		p: function update(changed, ctx) {
			if ((changed.media) && img_src_value !== (img_src_value = ctx.media.media_details.sizes.full.source_url)) {
				img.src = img_src_value;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}
		}
	};
}

function HalfSpread(options) {
	this._debugName = '<HalfSpread>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('media' in this._state)) console.warn("<HalfSpread> was created without expected data property 'media'");
	this._intro = true;

	if (!document.getElementById("svelte-1qwip6t-style")) add_css();

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(HalfSpread.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

HalfSpread.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		HalfSpread = register("components/HalfSpread.html", HalfSpread);
	} else {
		// hot update
		HalfSpread = reload("components/HalfSpread.html", HalfSpread);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (HalfSpread);


/***/ }),

/***/ "./components/QuarterSpread.html":
/*!***************************************!*\
  !*** ./components/QuarterSpread.html ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/QuarterSpread.html generated by Svelte v2.9.9 */


const file = "components/QuarterSpread.html";

function add_css() {
	var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
	style.id = 'svelte-1snlna2-style';
	style.textContent = "img.svelte-1snlna2{width:200%;height:200%;transform:translate(-50%)}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVhcnRlclNwcmVhZC5odG1sIiwic291cmNlcyI6WyJRdWFydGVyU3ByZWFkLmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiPGRpdiBjbGFzcz1cImgxMDAgdzEwMCBvaCBiZ2Mtd2hpdGVcIj5cbiAgPGltZyBzcmM9XCJ7bWVkaWEubWVkaWFfZGV0YWlscy5zaXplcy5mdWxsLnNvdXJjZV91cmx9XCI+XG48L2Rpdj5cblxuPHN0eWxlPlxuICBpbWcge1xuICAgIHdpZHRoOiAyMDAlO1xuICAgIGhlaWdodDogMjAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcbiAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsR0FBRyxlQUFDLENBQUMsQUFDSCxLQUFLLENBQUUsSUFBSSxDQUNYLE1BQU0sQ0FBRSxJQUFJLENBQ1osU0FBUyxDQUFFLFVBQVUsSUFBSSxDQUFDLEFBQzVCLENBQUMifQ== */";
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
	var div, img, img_src_value;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("img");
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			img = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "IMG", { src: true, class: true }, false);
			var img_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(img);

			img_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			img.src = img_src_value = ctx.media.media_details.sizes.full.source_url;
			img.className = "svelte-1snlna2";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(img, file, 1, 2, 39);
			div.className = "h100 w100 oh bgc-white";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(img, div);
		},

		p: function update(changed, ctx) {
			if ((changed.media) && img_src_value !== (img_src_value = ctx.media.media_details.sizes.full.source_url)) {
				img.src = img_src_value;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}
		}
	};
}

function QuarterSpread(options) {
	this._debugName = '<QuarterSpread>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('media' in this._state)) console.warn("<QuarterSpread> was created without expected data property 'media'");
	this._intro = true;

	if (!document.getElementById("svelte-1snlna2-style")) add_css();

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(QuarterSpread.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

QuarterSpread.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		QuarterSpread = register("components/QuarterSpread.html", QuarterSpread);
	} else {
		// hot update
		QuarterSpread = reload("components/QuarterSpread.html", QuarterSpread);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (QuarterSpread);


/***/ }),

/***/ "./components/Title.html":
/*!*******************************!*\
  !*** ./components/Title.html ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* components/Title.html generated by Svelte v2.9.9 */


const file = "components/Title.html";

function add_css() {
	var style = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("style");
	style.id = 'svelte-quv5ds-style';
	style.textContent = "h1.svelte-quv5ds{font-size:3rem;line-height:0.9;font-weight:400;margin-bottom:3rem}@media(min-width: 768px){h1.svelte-quv5ds{font-size:4rem}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGl0bGUuaHRtbCIsInNvdXJjZXMiOlsiVGl0bGUuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyI8ZGl2IGNsYXNzPVwiYzEyIHoyXCI+XG4gIDxoMSBjbGFzcz1cImNvMiBjOCBzbS1jbzQgc20tYzRcIj57QGh0bWwgdGl0bGV9PC9oMT5cbjwvZGl2PlxuXG48c3R5bGU+XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgbGluZS1oZWlnaHQ6IDAuOTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgIH1cbiAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0UsRUFBRSxjQUFDLENBQUMsQUFDRixTQUFTLENBQUUsSUFBSSxDQUNmLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLGFBQWEsQ0FBRSxJQUFJLEFBQ3JCLENBQUMsQUFDRCxNQUFNLEFBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBQ3pCLEVBQUUsY0FBQyxDQUFDLEFBQ0YsU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUNILENBQUMifQ== */";
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(style, document.head);
}

function create_main_fragment(component, ctx) {
	var div, h1;

	return {
		c: function create() {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("div");
			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createElement"])("h1");
			this.h()
		},

		l: function claim(nodes) {
			div = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			h1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimElement"])(div_nodes, "H1", { class: true }, false);
			var h1_nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(h1);

			h1_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			div_nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
			this.h();
		},

		h: function hydrate() {
			h1.className = "co2 c8 sm-co4 sm-c4 svelte-quv5ds";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(h1, file, 1, 2, 23);
			div.className = "c12 z2";
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["addLoc"])(div, file, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(div, target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["appendNode"])(h1, div);
			h1.innerHTML = ctx.title;
		},

		p: function update(changed, ctx) {
			if (changed.title) {
				h1.innerHTML = ctx.title;
			}
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(div);
			}
		}
	};
}

function Title(options) {
	this._debugName = '<Title>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('title' in this._state)) console.warn("<Title> was created without expected data property 'title'");
	this._intro = true;

	if (!document.getElementById("svelte-quv5ds-style")) add_css();

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Title.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Title.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		Title = register("components/Title.html", Title);
	} else {
		// hot update
		Title = reload("components/Title.html", Title);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Title);


/***/ }),

/***/ "./src/routes/folds/_grid.js":
/*!***********************************!*\
  !*** ./src/routes/folds/_grid.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var muuri_src_Packer_Packer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! muuri/src/Packer/Packer */ "./node_modules/muuri/src/Packer/Packer.js");
/* harmony import */ var prando__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prando */ "./node_modules/prando/dist/Prando.es.js");



const SPREADS = ['full', 'half', 'quarter']

class Grid {
  constructor(lastModified) {
    this.packer = new muuri_src_Packer_Packer__WEBPACK_IMPORTED_MODULE_0__["default"]()
    this.items = []
    const seed = lastModified || "determinism"
    this.rng = new prando__WEBPACK_IMPORTED_MODULE_1__["default"](seed)
    this.margin = 0
  }

  addFold(fold) {
    let aspect = fold.meta.fold_front.media_details.height /
      fold.meta.fold_front.media_details.width
    let creases = fold.meta.creases
    let spread = SPREADS[this.rng.nextInt(0, creases)]
    let item =  { fold, aspect, spread }
    switch (spread) {
      case 'full':
        item._width = 50
        item._height = aspect * 50
        break;
      case 'half':
        item._width = 50 / 2
        item._height = aspect * 50
        break;
      case 'quarter':
        item._width = 50 / 2
        item._height = aspect * 50 / 2
        break;
    }
    item._marginLeft = item._marginRight = item._marginBottom = item._marginTop = this.margin
    this.items.push(item)
  }

  layout() {
    let layout = this.packer.getLayout(this.items, 100, 100)
    layout.items = this.items
    return layout
  }
}

/* harmony default export */ __webpack_exports__["default"] = (Grid);


/***/ }),

/***/ "./src/routes/folds/index.html":
/*!*************************************!*\
  !*** ./src/routes/folds/index.html ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/shared.js */ "./node_modules/svelte/shared.js");
/* harmony import */ var _grid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_grid */ "./src/routes/folds/_grid.js");
/* harmony import */ var _components_FoldGrid_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/FoldGrid.html */ "./components/FoldGrid.html");
/* harmony import */ var _components_Title_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/Title.html */ "./components/Title.html");
/* src/routes/folds/index.html generated by Svelte v2.9.9 */





async function preload({ params, query }) {
  const maskFields = 'title/rendered,slug,' +
    'meta(' +
      'volume,number,bulletin,creases,' +
      'fold_front/media_details(height,width,sizes/full/source_url),' +
      'fold_editors(title/rendered,slug),' +
      'graphic_designer(title/rendered,slug),' +
      'positions_editor(title/rendered,slug),' +
      'web_editor(title/rendered,slug),' +
      'posts(title/rendered,slug,meta/contributors(title/rendered))' +
    ')'
  let res = await this.fetch(`folds.json?fields=${maskFields}`)
  if (!res.ok) {
    let message = await res.text()
    return this.error(res.status, message);
  }
  let folds = await res.json()
  res = await this.fetch(`last-modified.json`)
  if (!res.ok) {
    message = await res.text()
    return this.error(res.status, message);
  }
  const data = await res.json()
  const grid = new _grid__WEBPACK_IMPORTED_MODULE_1__["default"](data.lastModified)
  for (let fold of folds) {
    if (fold.meta.fold_front) {
      grid.addFold(fold)
    } else {
      console.log(`Fold ${fold.title.rendered} missing fold front image.`)
    }
  }
  return {
    layout: grid.layout()
  }
};

function getRandomInt(max) {
  return Math.floor(Math.random() * Math.floor(max));
}

const file = "src/routes/folds/index.html";

function create_main_fragment(component, ctx) {
	var text, text_1;

	var title_initial_data = { title: "Folds" };
	var title = new _components_Title_html__WEBPACK_IMPORTED_MODULE_3__["default"]({
		root: component.root,
		store: component.store,
		data: title_initial_data
	});

	var foldgrid_initial_data = { layout: ctx.layout };
	var foldgrid = new _components_FoldGrid_html__WEBPACK_IMPORTED_MODULE_2__["default"]({
		root: component.root,
		store: component.store,
		data: foldgrid_initial_data
	});

	return {
		c: function create() {
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n\n");
			title._fragment.c();
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["createText"])("\n");
			foldgrid._fragment.c();
			this.h()
		},

		l: function claim(nodes) {
			text = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\n\n");
			title._fragment.l(nodes);
			text_1 = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["claimText"])(nodes, "\n");
			foldgrid._fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "Folds";
		},

		m: function mount(target, anchor) {
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(text, target, anchor);
			title._mount(target, anchor);
			Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["insertNode"])(text_1, target, anchor);
			foldgrid._mount(target, anchor);
		},

		p: function update(changed, ctx) {
			var foldgrid_changes = {};
			if (changed.layout) foldgrid_changes.layout = ctx.layout;
			foldgrid._set(foldgrid_changes);
		},

		d: function destroy(detach) {
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(text);
			}

			title.destroy(detach);
			if (detach) {
				Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"])(text_1);
			}

			foldgrid.destroy(detach);
		}
	};
}

function Index(options) {
	this._debugName = '<Index>';
	if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
	Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options);
	this._state = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])({}, options.data);
	if (!('layout' in this._state)) console.warn("<Index> was created without expected data property 'layout'");
	this._intro = true;

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this, this._state);

	if (options.target) {
		var nodes = Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["children"])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["detachNode"]);
		this._mount(options.target, options.anchor);

		this._lock = true;
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._beforecreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._oncreate);
		Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["callAll"])(this._aftercreate);
		this._lock = false;
	}
}

Object(svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["assign"])(Index.prototype, svelte_shared_js__WEBPACK_IMPORTED_MODULE_0__["protoDev"]);

Index.prototype._checkReadOnly = function _checkReadOnly(newState) {
};

Index.preload = preload;

if (true) {
	const { configure, register, reload } = __webpack_require__(/*! ./node_modules/svelte-loader/lib/hot-api.js */ "./node_modules/svelte-loader/lib/hot-api.js");

	module.hot.accept();

	if (!module.hot.data) {
		// initial load
		configure({});
		Index = register("src/routes/folds/index.html", Index);
	} else {
		// hot update
		Index = reload("src/routes/folds/index.html", Index);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Index);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,